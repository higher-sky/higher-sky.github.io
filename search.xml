<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>校企合作</title>
      <link href="2021/0601undefined.html"/>
      <url>2021/0601undefined.html</url>
      
        <content type="html"><![CDATA[<h1 id="第一天"><a href="#第一天" class="headerlink" title="第一天"></a>第一天</h1><p>上午：</p><ul><li>主要了解了针对具体的项目，我们作为甲方、乙方，该如何做的。<ul><li>甲方: </li><li>乙方：</li></ul></li><li>团队建设，稍微聊了解了下OSI、TCP/IP两种模型</li><li>介绍一系列端口<ul><li>console口—–控制端口</li><li>AUX口———辅助端口</li><li>Ethernet 0/0—10M —–以太口—-局域网接口—-连接内部终端、交换机0/0 </li><li>Fastethernet——- 0/0 ——前面的数字是模块号<pre><code>        ------- 0/1 ------模块上的接口号</code></pre></li><li>Serial ——-0/1/0 串口—-广域网接口—–连接广域网链路(租用)<pre><code>   -------E1专线--2M   -------HWIC-2T         </code></pre>下午：</li></ul></li><li>具体讲解了怎么给交换机设置密码</li><li>密码忘记了该怎么破解（密码破解）</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 恩杰尼尔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RSA常见十种题型</title>
      <link href="2021/0531undefined.html"/>
      <url>2021/0531undefined.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-公钥解析，签名加密"><a href="#1-公钥解析，签名加密" class="headerlink" title="1.公钥解析，签名加密"></a>1.公钥解析，签名加密</h2><p>如果题目给了文件后缀名pem或者题干文件带有KEY的文件，就可以使用Linux自带的工具openssl,提取出n和e。</p><pre><code>openssl rsa -pubin -text -modulus -in warmup -in pubkey.pem</code></pre><p>还有一个就是用在线的公钥解析<a href="http://ctf.ssleye.com/pub_asys.html">公钥解析</a><br>得到n和e之后，用在线分解的网站<a href="http://www.factordb.com/index.php">factordb</a><br>得到p,q<br>然后密文c可能是一个flag.enc的文件直接用winhex或者010把密文转化成16进制。<br>一般解题脚本</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> <span class="token operator">*</span>n <span class="token operator">=</span>e <span class="token operator">=</span>c <span class="token operator">=</span> p <span class="token operator">=</span>q <span class="token operator">=</span>phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token number">-1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token number">-1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#计算出私钥</span>m <span class="token operator">=</span> pow<span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#计算出明文m</span>flag<span class="token operator">=</span>long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span></code></pre><p>2021萌新赛–凛冬以至</p><h2 id="2-利用公约数求解"><a href="#2-利用公约数求解" class="headerlink" title="2.利用公约数求解"></a>2.利用公约数求解</h2><p>如果题目提供两次公钥解密过程使用的n1和n2具有相同的素数因子，可以利用欧几里得算法的到一个公约数p，然后就可以把n1和n2分解了</p><pre class=" language-python"><code class="language-python">p<span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>n1<span class="token punctuation">,</span>n2<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#gmpy2的gcd，用于求最大公约数。</span></code></pre><p>自定义函数gcd()欧几里得算法</p><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">gcd</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> a<span class="token operator">&lt;</span>b<span class="token punctuation">:</span>        a<span class="token punctuation">,</span>b <span class="token operator">=</span> b<span class="token punctuation">,</span>a    <span class="token keyword">while</span><span class="token punctuation">(</span>b<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        temp <span class="token operator">=</span> a<span class="token operator">%</span>b        a <span class="token operator">=</span> b        b <span class="token operator">=</span> temp    <span class="token keyword">return</span> a</code></pre><h2 id="3-分解N得到多个相同的P"><a href="#3-分解N得到多个相同的P" class="headerlink" title="3.分解N得到多个相同的P"></a>3.分解N得到多个相同的P</h2><p>1.欧拉函数的性质：<br>p为素数，n=p^a 所以 φ(n)=(p−1)∗p^(a−1)=p^a−p^(a−1)<br>φ(n)=(p1-1)<em>(p2-1)</em>(p3-1)</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> long_to_bytes n<span class="token operator">=</span> e<span class="token operator">=</span> c<span class="token operator">=</span> p1 <span class="token operator">=</span> p2 <span class="token operator">=</span> p3 <span class="token operator">=</span> phi <span class="token operator">=</span> <span class="token punctuation">(</span>p1<span class="token number">-1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>p2<span class="token number">-1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>p3<span class="token number">-1</span><span class="token punctuation">)</span>  d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>  m <span class="token operator">=</span> pow<span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>  <span class="token keyword">print</span> （long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>凛冬以至</title>
      <link href="2021/0531undefined.html"/>
      <url>2021/0531undefined.html</url>
      
        <content type="html"><![CDATA[<h1 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h1><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a><strong>签到</strong></h2><p>  题目：NTQ1NjcwNTg1MjMwNGU2MTRkN2E0ZTUwNTQ2YzU2NTg1NDdhNGU1NDRlMzAzNTQ3NTc0NTU5MzI0ZTQ2NTI0YjU0NTQ1NjU2NTM0NTZiMzM1MzU0MzAzZA%3D%3D<br>  %3D在URL里面为=<br>  所以这是一个base64加密下面一个在线解密的网站:<br>  <a href="http://ctf.ssleye.com/base64.html">base64</a><br>  <img src="/images/image-13.png" alt="Image text"><br>  得到一串16进制字符串5456705852304e614d7a4e50546c5658547a4e544e303547574559324e46524b5454565653456b335354303d<br>  然后用16进制转字符串在线网站<br>  <a href="https://zixuephp.net/tool-str-hex.html">16进制字符串</a><br>  <img src="/images/image-14.png" alt="Image text"><br>  得到TVpXR0NaMzNPTlVXTzNTN05GWEY2NFRKTTVVSEk3ST0=然后在base64，在base32都到flag{sign_in_right}</p><h2 id="rsa256"><a href="#rsa256" class="headerlink" title="rsa256"></a><strong>rsa256</strong></h2><p>  下载得到一个压缩包直接上脚本</p><pre class=" language-python"><code class="language-python">c1 <span class="token operator">=</span> <span class="token number">0x0B39CC1B6127D3BBED2BC045148C911D467985A94B147EDE80750F95A360D47A</span>c2 <span class="token operator">=</span> <span class="token number">0x9AFB1CDC1986D3BB53A3425B396C83618EFAAA81C14C965C813415E5C54FCE4B</span>c3 <span class="token operator">=</span> <span class="token number">0x0F04B3B67EF230F80BB518D26DED38AF84B6C8D87BA80C09EBF1D865123082FA</span>n <span class="token operator">=</span> <span class="token number">98432079271513130981267919056149161631892822707167177858831841699521774310891</span>p <span class="token operator">=</span> <span class="token number">302825536744096741518546212761194311477</span>q <span class="token operator">=</span> <span class="token number">325045504186436346209877301320131277983</span>e <span class="token operator">=</span> <span class="token number">65537</span><span class="token keyword">import</span> gmpy2<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>phi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token number">-1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token number">-1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#print(d)</span>m1 <span class="token operator">=</span> pow<span class="token punctuation">(</span>c1<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span>m2 <span class="token operator">=</span> pow<span class="token punctuation">(</span>c2<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span>m3 <span class="token operator">=</span> pow<span class="token punctuation">(</span>c3<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>m1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>m2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>m3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#flag{3b6d3806-4b2b-11e7-95a0-000c29d7e93d}</span></code></pre><h2 id="big-exponent"><a href="#big-exponent" class="headerlink" title="big exponent"></a><strong>big exponent</strong></h2><p>题目一个压缩包里面有三个公钥文件、一个py文件、一个flag.enc文件<br><img src="/images/image-15.png" alt="image text"><br>然后三个公钥文件直接在线解密<br><a href="http://ctf.ssleye.com/pub_asys.html">公钥解析</a><br>然后得到<br>e1 = 1602756013062112843744042848696751291734328877359431629694202442970213958619662519632912193714465417475466815521066706941763237747867361186913306445129211826325418293180840491906582168046775011902187128141553876554027713566535166942445716391472657244732048178191442990104179346452453955565791601538034168571296789315804768285499137885434524729333086995652263390337079371130206550240700066939844703584472188151540022021010493776597423277845220640999153544739230286588525750509153214472224408941595500917168173154237309301590704927373355915044693214928571732630774782699886200158926633708423762013924971588111846040637913518589837132640710389683172084726417372521165973166248965018352226577610296331263536718335546936698363703546273609914679582318416258368128209310517101158271088467767872409470829124988064340805991237546597067227179804849995209190941225949426623192206566609053871819997087958681298608926214864605144946630018633964330698142294342646806166413223615564901058200767400412658431809514870082489588903686687244605745555051646530519595510577875446720832450864212827938087056696786030988058247078944886916082594200248708750492466227915219311120228702916717634212959658361246513056518215813568863758319903741132911625511</p><p>n 1= </p><pre class=" language-python"><code class="language-python"><span class="token number">1038997220248847443438564705725653697094452215469936659327465900</span><span class="token number">6962946119149578322524182527610365274630374823513225511576566970</span><span class="token number">0842197265711121714987654684549920920320989687915812513639812733</span><span class="token number">3535171636602639550913775792032068470548425607104716490965949335</span><span class="token number">2078954931917152094605722917224289566534793783961520549197586345</span><span class="token number">5506878996650717808257188103959553347748525290176681466341888363</span><span class="token number">8071830555234712073859315649908120135977221104650051416219748315</span><span class="token number">1522501404569451950489266441212978454319065210389542615479438368</span><span class="token number">3058397628437202621595196747392141094607350146897968465061107886</span><span class="token number">8318449094865132316130315506605346747085923431120000484502980083</span><span class="token number">4717834050659163269482118990403483214933192284752677787379935884</span><span class="token number">7448292980557245985856226017202068372494261479321030720827948410</span><span class="token number">3571579213942209374398373184610887478901904548713015544238556778</span><span class="token number">3453353134728022801984465689809769641368264999340835632297409830</span><span class="token number">8690388953028828327997137590326248817774960535402880287516147947</span><span class="token number">9791086931289611280730945368726194963218905927025387729495682354</span><span class="token number">4426958058484838008690369213989176715919832284260911094734592168</span><span class="token number">2602990217846020997412112817363494815388349894694169404503065689</span><span class="token number">9591169150440666299010443827956197750797179041705612561156982050</span><span class="token number">2961491952589</span></code></pre><p>e2 = 2904058618957347796124806709844284214100347303482285059334842732156837427829028418920870968317177518028202483477549514212955602692003773329471277987963666941967413171313415800413419035946782664102531583332702813106576020585616653743371004518451826620196955977231854966488359561580200233096295646666641174918511109948768573194092566999584870294045886424642762432262548742357989212451404702164775093450442502101704487267578537521568104803212351617897518360418816225241353834568549073742928755460051553731472149086328300601631382240404345064443429825021218866893595330304773327331625471097046963602134853969990771813467918989638459534586121489116502696806243321935512681823926215427247490383579587683616800665676470585563938390230514312532088869777318211152869729889605399179012809125224288902698315984031292176410078299624068706977744884534372985229093509461309044283036222251451629256507078267852271542419681478299549238667404075635069223260077018992991699204691169927302219293706248235790806563798411283016548214931544796004828252360169451578597816847440083848623571457419977424379075036672826539077109974259972227306009381651363948380296783778147092953371690519222478858048155676852084473468114026565915661459803106941095015763</p><p>n 2=  </p><pre class=" language-python"><code class="language-python"><span class="token number">2947099132768432239262140325489012008136562359786164146900132065</span><span class="token number">8749438743102148451478865489139274928976381180800827334647598716</span><span class="token number">1097216166109639313571126720848946609299157496083280390743239382</span><span class="token number">2522054842671146687216826758961986352293587044309465017950910137</span><span class="token number">1425848147532465131964502204205438062565226241230114203012053778</span><span class="token number">2743980709058687150290447690092273119094192260249147234169109994</span><span class="token number">8406959589435264602346525356951434483133228448982018806919026427</span><span class="token number">7962387019530493740432404270651143799124007614018353822316441648</span><span class="token number">9092720922904542023283887701490105957077106395100234966794823868</span><span class="token number">4003020817629602614271587804803350183809313620245659299022506108</span><span class="token number">1994229430097099961625355563665863640712070306243527891650126904</span><span class="token number">8172692641065498810900329484294939222325516926525604023033377754</span><span class="token number">0771236826373527806129949567064986986248005230506249577950447427</span><span class="token number">2554161971619449782256952809438129767318694173596497173782086247</span><span class="token number">4394925076326970969559125934976698580151627209910973224093497012</span><span class="token number">9506348663036316833397070269529278378508785318832239680957227443</span><span class="token number">2080245224918137683065479557191975153136010911375315466804487257</span><span class="token number">6198908105116969808540334406913795516807039999674325041930176306</span><span class="token number">2376596262269956472939379607564392703925189842964212071831556905</span><span class="token number">393561597209</span></code></pre><p>e3 = 65537</p><p>n3 =</p><pre class=" language-python"><code class="language-python"><span class="token number">1492295977578406649931652893531632582514001120887183062765319154</span><span class="token number">9546959775167708525042423039865322548420928571524120743831693550</span><span class="token number">1235634939817979509128958934762004470833865493533360868990649218</span><span class="token number">7858207434679132010410613996501048061487959235779305334257785076</span><span class="token number">1108944086318475849882440272688246818022209356852924215237481460</span><span class="token number">2293775442972249838870266692228859873230823240446458830709162434</span><span class="token number">3952180970267429546925372361667724576224249447858780740268847417</span><span class="token number">6102093482019417118703747411862420536240611089529331148684440513</span><span class="token number">9346094128849410916515948615306060869821748624617396047053544165</span><span class="token number">87503836130151492937714365614194583664241</span></code></pre><p>p = 101762447604961968347497011921099322367324119881977823223715806843654916018223203152717441386396615480134613864942068489600487206751473112264495957512819776729786840027245275219664091321087832913341367749452671938119115622233015167030327196487127307195872792552039408988207189866115101567965404039921455793363</p><p>q =146645055489569596158773422326511843870914610026045288623162173369449741025994927278359852181645222010216728295790096211969513458244344811852179454305768973973420398459241985170762812039623053792853389316411927678494740679905048052776274447299638217155556426312374908963757267001415016478005573936685580868907</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> <span class="token operator">*</span>n <span class="token operator">=</span> <span class="token number">14922959775784066499316528935316325825140011208871830627653191549546959775167708525042423039865322548420928571524120743831693550123563493981797950912895893476200447083386549353336086899064921878582074346791320104106139965010480614879592357793053342577850761108944086318475849882440272688246818022209356852924215237481460229377544297224983887026669222885987323082324044645883070916243439521809702674295469253723616677245762242494478587807402688474176102093482019417118703747411862420536240611089529331148684440513934609412884941091651594861530606086982174862461739604705354416587503836130151492937714365614194583664241</span>e <span class="token operator">=</span> <span class="token number">65537</span>p <span class="token operator">=</span> <span class="token number">101762447604961968347497011921099322367324119881977823223715806843654916018223203152717441386396615480134613864942068489600487206751473112264495957512819776729786840027245275219664091321087832913341367749452671938119115622233015167030327196487127307195872792552039408988207189866115101567965404039921455793363</span>q <span class="token operator">=</span> <span class="token number">146645055489569596158773422326511843870914610026045288623162173369449741025994927278359852181645222010216728295790096211969513458244344811852179454305768973973420398459241985170762812039623053792853389316411927678494740679905048052776274447299638217155556426312374908963757267001415016478005573936685580868907</span>c <span class="token operator">=</span> <span class="token number">0x6BA3E02E5B09958B082962C011D7EEC896FC61A34020E2D3AB2550CCA700943ED7FC330BA185BA5D487C75DD0E2796C4E273BCF4D294D7C9197CCFF7FAE38198CDAA190DDDC47C9DA4C418DAFE71A4F233EFBF36FBA23C8A31D0C9AC8F3E44AF6194224E4F5AFFF1D8933EEA38D932945D07A5B3766C3EA165F2CB52DD5873BF47B5E96FCE855D1BD2A96E9BA3A2C7A40BCAF1E7367354E21B4D1EAF1729DA9F9435340CBA17EC59B25255480D4C4C8E4528644C780B2FC24DB5D25C7B45FF0FEC0F4D6345A14D650CAEFA212CB887EC7F3FD8CCBCBBAB0E0B7091AC8BEB110A2550E6D5BF51DB68DB4269FF32DE71BD53B907F16A452F382B1D59801FCD70FD</span>phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token number">-1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token number">-1</span><span class="token punctuation">)</span>d <span class="token operator">=</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m <span class="token operator">=</span> pow<span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#flag{welcome_to_2th_compettion_2021}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 萌新比赛题目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 凛冬以至(crypto) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界</title>
      <link href="2021/0530undefined.html"/>
      <url>2021/0530undefined.html</url>
      
        <content type="html"><![CDATA[<h1 id="攻防世界"><a href="#攻防世界" class="headerlink" title="攻防世界"></a>攻防世界</h1><h2 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h2><h3 id="新手练习区"><a href="#新手练习区" class="headerlink" title="新手练习区"></a>新手练习区</h3><h2 id="instanity"><a href="#instanity" class="headerlink" title="instanity"></a><strong>instanity</strong></h2><p>直接把题目文件拖入IDA用shift+F12就看到flag了</p><p><img src="/images/image-3.png" alt="Image text"></p><h2 id="python-trade"><a href="#python-trade" class="headerlink" title="python-trade"></a><strong>python-trade</strong></h2><p>题目是一个pyc文件，我用的是Easy Python Decompiler是它变成py文件，用python IDE 打开如下：</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Embedded file name: 1.py</span><span class="token keyword">import</span> base64<span class="token keyword">def</span> <span class="token function">encode</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">:</span>    s <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> message<span class="token punctuation">:</span>        x <span class="token operator">=</span> ord<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">32</span>        x <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">16</span>        s <span class="token operator">+=</span> chr<span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token keyword">return</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>s<span class="token punctuation">)</span>correct <span class="token operator">=</span> <span class="token string">'XlNkVmtUI1MgXWBZXCFeKY+AaXNt'</span>flag <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">print</span> <span class="token string">'Input flag:'</span>flag <span class="token operator">=</span> raw_input<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> encode<span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token operator">==</span> correct<span class="token punctuation">:</span>    <span class="token keyword">print</span> <span class="token string">'correct'</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span> <span class="token string">'wrong'</span></code></pre><p>一看这是一个简单的逻辑运算加密，解密脚本如下：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token keyword">def</span> <span class="token function">decode</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">:</span>    s <span class="token operator">=</span> <span class="token string">''</span>    imessage <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>message<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> imessage<span class="token punctuation">:</span>        x <span class="token operator">=</span>  i<span class="token operator">-</span> <span class="token number">16</span>        x <span class="token operator">=</span> x <span class="token operator">^</span> <span class="token number">32</span>        s <span class="token operator">+=</span> chr<span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token keyword">return</span> scorrect <span class="token operator">=</span> <span class="token string">'XlNkVmtUI1MgXWBZXCFeKY+AaXNt'</span>flag <span class="token operator">=</span> decode<span class="token punctuation">(</span>correct<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#nctf{d3c0mpil1n9_PyC}</span></code></pre><h2 id="re1"><a href="#re1" class="headerlink" title="re1"></a><strong>re1</strong></h2><p>题目是一个EXE可执行文件，常规题目直接拖入IDA进行分析</p><p><img src="/images/image-4.png" alt="Image text"></p><p>用IDA打开是选择binary file，在此模式下不会进行反汇编</p><p><img src="/images/image-5.png" alt="Image text"></p><h2 id="game"><a href="#game" class="headerlink" title="game"></a><strong>game</strong></h2><p>题目又是一个exe可执行文件，打开一看</p><p><img src="/images/image-6.png" alt="Image text"></p><p>话不多说直接拖入IDA</p><p><img src="/images/image-7.png" alt="Image text"></p><p>通过这里看大只有灯全部亮了，才回跳转到sub_457AB4()<br><img src="/images/image-8.png" alt="Image text"></p><p>得到这个flag的ASCII码，但是要有一个简单的逻辑运算，编写一个脚本转化</p><pre class=" language-python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span>        <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">96</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span>        <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">119</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">124</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">125</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">124</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">74</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span>        <span class="token number">83</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">94</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">84</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">96</span><span class="token punctuation">,</span> <span class="token number">83</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">121</span><span class="token punctuation">,</span> <span class="token number">104</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">117</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span>        <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">,</span> <span class="token number">119</span><span class="token punctuation">,</span> <span class="token number">96</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">107</span><span class="token punctuation">,</span> <span class="token number">71</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">,</span> <span class="token number">107</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">,</span>        <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">117</span><span class="token punctuation">,</span> <span class="token number">126</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>str <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    b<span class="token punctuation">[</span><span class="token number">0</span> <span class="token operator">+</span> i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">0</span> <span class="token operator">+</span> i<span class="token punctuation">]</span>    b<span class="token punctuation">[</span><span class="token number">0</span> <span class="token operator">+</span> i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> <span class="token number">0x13</span>    str <span class="token operator">=</span> str <span class="token operator">+</span> chr<span class="token punctuation">(</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#zsctf{T9is_tOpic_1s_v5ry_int7resting_b6t_others_are_n0t}</span></code></pre><p>还有一个方法就是玩这个游戏使得它灯全部变亮就会出现flag了</p><h2 id="Hello-CTF"><a href="#Hello-CTF" class="headerlink" title="Hello, CTF"></a><strong>Hello, CTF</strong></h2><p>题目也是一个可执行文件EXE,打开一看</p><p><img src="/images/image-9.png" alt="Image text"></p><p>用IDA打开，再用shift+F12的到</p><p><img src="/images/image-10.png" alt="Image text"></p><p>再根据上边exe打开要求的答案是字符串所以将IDA里面的16进制转字符串<a href="https://www.sojson.com/hexadecimal.html">16进制转字符</a></p><p><img src="/images/image-11.png" alt="Image text"></p><p><img src="/images/image-12.png" alt="Image text"></p><p>所做flag是CrackMeJustForFun</p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆向刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>G1CTF</title>
      <link href="2021/0527undefined.html"/>
      <url>2021/0527undefined.html</url>
      
        <content type="html"><![CDATA[<h1 id="G1CTF-协会内部测试"><a href="#G1CTF-协会内部测试" class="headerlink" title="G1CTF(协会内部测试)"></a>G1CTF(协会内部测试)</h1><h2 id="Deal-Breaking"><a href="#Deal-Breaking" class="headerlink" title="Deal Breaking"></a>Deal Breaking</h2><p>题目</p><p>cnenprgnzbysbeurnqnpur </p><p>解题</p><p> [在线ROT加密] (<a href="https://www.qqxiuzi.cn/bianma/ROT5-13-18-47.php">https://www.qqxiuzi.cn/bianma/ROT5-13-18-47.php</a>) </p><p> <img src="/images/image-1.png" alt="Image text"></p><p> 在MD5编码就得到flag</p><p>MD5 在线加密网站<a href="https://md5jiami.bmcx.com/">md5</a></p><p><img src="/images/image-2.png" alt="Image text"></p><h2 id="baby-rsa"><a href="#baby-rsa" class="headerlink" title="baby_rsa"></a>baby_rsa</h2><p>普通的RSA加密但多了一次pow 运算</p><p>解密脚本如下</p><pre class=" language-python"><code class="language-python">n <span class="token operator">=</span> <span class="token number">18166111488983638423176654225038910650374178404043258136863317940757240374883045318227630220114908148002528619687208976201483203446705228237820608531034600157346418730110800833894198105113069673034318791074080878803821797374439187892933762426303490171060652425319592687318992422979831460606780689490127157122450326817694644127955168509718422226505201308410281564018832558025316135527711604948983206569045881358071837726506411561445950018434181828539749068924458242255898899889941894373420604283541696070823346969159662074221543706652525690955057870664198106495869582165707721782854117610672456879034154898769471938117</span>e <span class="token operator">=</span> <span class="token number">65537</span>c <span class="token operator">=</span> <span class="token number">16557540364154395713558646669072741937615342260542036031952182998548657011824978776677484944354752850867643908247704032511389420321541306432748843707416654616686046776804432102455821985542337552330254302403535524234293479604198963438410959320502344078024576646316377856554837978984863667052517437922967926155676374386985386995490935331458679889799199387332376735566839929210890931308968597230699243910342515468179185950859704753759493976488271753912140439374347388198468842216991965867366259721821413872154269673724400345270897275549939948544776957761650034569256088810092045614520316608497052245790834163200510667772</span>p <span class="token operator">=</span><span class="token number">130456283857645025762691023898845608928710362686294851221450093824533197549806631148867242691844441160576320773904432512838379590127986113818416101086695539425149571612979342889778360825402727498529748702035429662584726706609716114370652011043194792995908818094170934656989995629482678233000685983090325365549</span>q <span class="token operator">=</span><span class="token number">139250566947059823453625463016686669261826444361819002282335838853816828667839799789393680821194880353192071200076880361361848345889074292932450446910930443112614763933390287115641256150843558712707320218852675477962227409197464100372762134803009018827495653979157431219931338408129724157546988493768646375033</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> gmpy2phi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token number">-1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token number">-1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m<span class="token operator">=</span>pow<span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#print(long_to_bytes(m))</span><span class="token comment" spellcheck="true">#没有加后面的pow</span>a<span class="token operator">=</span>pow<span class="token punctuation">(</span><span class="token number">0x1337</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x18a39cb09e40671788a6b9221371e3f5455bbde2aff984e491c85f4f3ad309613</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h2 id="easyRSA"><a href="#easyRSA" class="headerlink" title="easyRSA"></a>easyRSA</h2><p>这道题主要考察扩展欧几里得算法</p><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">gcd</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> a<span class="token operator">&lt;</span>b<span class="token punctuation">:</span>        a<span class="token punctuation">,</span>b <span class="token operator">=</span> b<span class="token punctuation">,</span>a    <span class="token keyword">while</span><span class="token punctuation">(</span>b<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        temp <span class="token operator">=</span> a<span class="token operator">%</span>b        a <span class="token operator">=</span> b        b <span class="token operator">=</span> temp    <span class="token keyword">return</span> a</code></pre><p>解题代码如下</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnum<span class="token keyword">def</span> <span class="token function">gcd</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> a<span class="token operator">&lt;</span>b<span class="token punctuation">:</span>        a<span class="token punctuation">,</span>b <span class="token operator">=</span> b<span class="token punctuation">,</span>a    <span class="token keyword">while</span><span class="token punctuation">(</span>b<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        temp <span class="token operator">=</span> a<span class="token operator">%</span>b        a <span class="token operator">=</span> b        b <span class="token operator">=</span> temp    <span class="token keyword">return</span> an1 <span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>mpz<span class="token punctuation">(</span><span class="token number">14343453794367092515497895137902168386296417319247146730459319881802140334698737189342973812146465828660342012946910653192803473600595707696472591504951198563603709181626005658184116684367802758344031386496658458264959969692044879175628783605186867276515694784082482043436473458055894723810140516689141599152195984714148210638833797638255124702611899073506190942745515704802064433300261613781916198106074829630095538317067848424354570246167013526201728488570271571071978289748473886089178585249674489547064957622989808178007470483946536987289341591847349128538928294808117443145097551386826012131775390678998400121889</span><span class="token punctuation">)</span>n2 <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>mpz<span class="token punctuation">(</span><span class="token number">20308195943065789251817446829863883469272602304751753219641822206296872340042055615695828234875654938558065292577939692476866300109337008636927498617655004089261030659132847752508448477243753135984370110439693105967818735745420000128069178972088161949286955900852997852216281385776262449633762670014571643311788609943581805728189446261833834354199480558854660930835489848639377800962143545608517015172667287024378681310097239827666867592226542748876958241795640727126418223939447294264460580825913526549434716100031432143671503937393640601052321015919112419872256052688412078974604159554387677255024728801489704260363</span><span class="token punctuation">)</span>c1 <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>mpz<span class="token punctuation">(</span><span class="token number">7060913174371289769309763235647638447135191122575239829016360331184038730172940927388867110734381358453407989806140634011350721798160713053621896705641720212112551788757319365520015847374673960320334248580560205413153114427654784961710348834514336159373193900583620653085765067165174133038800649323672785585501521017885631280303551697739951014696330327670228229605047676440962916067564193271247936974843751339372847625153953559941840547748375919498892051841063000432368600158512968060459462404612866403066205167176313042517873197370743936042865113128112591367582742396193149320607077649094903691975739181219359076265</span><span class="token punctuation">)</span>c2 <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>mpz<span class="token punctuation">(</span> <span class="token number">20148610260208170593289118672038891818770076647095364134619069654881479351996793675661468921299369828610961411535098751945943055486021096222646490248098261096267277133140141311947840921090893680970207588861087220137922905797128028172779716663247976566807484416436273763735289602135279810958841816837092253309070217739840320870090502512130142015671736882941916450932012952894134313348115440744061809508935802755106889882605495521669026118538807594430799171795521056652204797565525565412195933084030518258900930049905119086640401568596910662117008862676917676436361632490924908191898958534522611573541581472875515834526</span><span class="token punctuation">)</span>e<span class="token operator">=</span><span class="token number">65537</span>p<span class="token operator">=</span>gcd<span class="token punctuation">(</span>n1<span class="token punctuation">,</span>n2<span class="token punctuation">)</span>q<span class="token operator">=</span>n1<span class="token operator">//</span>pphi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token number">-1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token number">-1</span><span class="token punctuation">)</span>d1 <span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m1 <span class="token operator">=</span> pow<span class="token punctuation">(</span>c1<span class="token punctuation">,</span>d1<span class="token punctuation">,</span>n1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>m1<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h2 id="Asymmetric-task"><a href="#Asymmetric-task" class="headerlink" title="Asymmetric task"></a>Asymmetric task</h2><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> os<span class="token punctuation">,</span>sysos<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>path<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">import</span> base64<span class="token keyword">from</span> libnum <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSAflag<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>open<span class="token punctuation">(</span><span class="token string">'enc_flag.txt'</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>keys<span class="token operator">=</span>open<span class="token punctuation">(</span><span class="token string">'public_private.enc'</span><span class="token punctuation">,</span><span class="token string">'rt'</span><span class="token punctuation">)</span>public<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>keys<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>private<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>keys<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>key<span class="token operator">=</span>RSA<span class="token punctuation">.</span>import_key<span class="token punctuation">(</span>private<span class="token punctuation">)</span>c<span class="token operator">=</span>s2n<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>m<span class="token operator">=</span>pow<span class="token punctuation">(</span>c<span class="token punctuation">,</span>key<span class="token punctuation">.</span>d<span class="token punctuation">,</span>key<span class="token punctuation">.</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n2s<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>参考着ctftime的<a href="https://szymanski.ninja/en/ctfwriteups/2021/securebug-odin/asymmetricjob/">wp</a></p><h2 id="ONE-Piece"><a href="#ONE-Piece" class="headerlink" title="ONE Piece"></a>ONE Piece</h2><p><a href="https://en.wikipedia.org/wiki/International_maritime_signal_flags">解题网站</a><br>flag{0n1_p1ece}</p>]]></content>
      
      
      
        <tags>
            
            <tag> 协会测试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
